apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-allopen'
apply plugin: 'org.jmailen.kotlinter'

android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "com.snijsure.omdbsearch"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'OMDB_API_KEY', '"4d7fd2d"'
    }
    dataBinding {
        enabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildToolsVersion '28.0.3'
}

allOpen {
    annotation 'com.snijsure.omdbsearch.OpenClass'
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':utility')
    implementation project(path: ':dbrepository')

    api "com.jakewharton.timber:timber:${versions.timber}"
    api "com.android.support:support-annotations:${versions.kotlin}"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    api "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}"
    api "com.android.support.constraint:constraint-layout:${versions.constraintLayout}"
    api "com.android.support:customtabs:${versions.supportLibrary}"
    api "com.android.support:design:${versions.supportLibrary}"
    api "com.android.support:palette-v7:${versions.supportLibrary}"
    api "com.android.support:recyclerview-v7:${versions.supportLibrary}"
    api "com.android.support:support-dynamic-animation:${versions.supportLibrary}"
    api("com.github.bumptech.glide:glide:${versions.glide}") {
        exclude group: "com.android.support"
    }
    api "com.github.bumptech.glide:okhttp3-integration:${versions.glide}"
    api "com.github.bumptech.glide:recyclerview-integration:${versions.glide}"
    api "com.google.code.gson:gson:${versions.gson}"
    api "com.google.dagger:dagger:${versions.dagger}"
    api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    api "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    api "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    api "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
    api "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:" +
            "${versions.retrofitCoroutines}"
    api "android.arch.lifecycle:viewmodel:${versions.lifecycle}"
    api "android.arch.lifecycle:extensions:${versions.lifecycle}"


    kapt "com.github.bumptech.glide:compiler:${versions.glide}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    api 'com.jakewharton:butterknife:9.0.0-rc1'
    kapt 'com.jakewharton:butterknife-compiler:9.0.0-rc1'
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    api "com.google.dagger:dagger-android:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"
    api "com.squareup.retrofit2:converter-moshi:${versions.moshiConverterVersion}"
    api "com.squareup.moshi:moshi-kotlin:${versions.moshiKotlinVersion}"
    api "com.squareup.moshi:moshi-adapters:${versions.moshiKotlinVersion}"

    androidTestImplementation "com.android.support.test:runner:${versions.test_runner}"
    androidTestImplementation "com.android.support.test:rules:${versions.test_rules}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${versions.espresso}"
    androidTestImplementation "org.mockito:mockito-core:${versions.mockito}"
    androidTestImplementation "org.mockito:mockito-android:${versions.mockito}"
    androidTestImplementation "com.squareup.retrofit2:retrofit-mock:${versions.retrofit}"

    // Work around issue with runtime classpath version conflict
    androidTestImplementation "com.android.support:support-core-utils:${versions.supportLibrary}"
    androidTestImplementation "android.arch.lifecycle:runtime:${versions.lifecycle}"
    androidTestImplementation "com.android.support.test:rules:${versions.test_rules}"
    androidTestImplementation "android.arch.core:core-testing:${versions.coreTesting}"
    androidTestImplementation "com.android.support.test:rules:${versions.androidTestSupport}"


    testImplementation "android.arch.core:core-testing:${versions.coreTesting}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockito_kotlin}"
    testImplementation "com.squareup.retrofit2:retrofit-mock:${versions.retrofit}"
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "com.android.support.test:rules:${versions.androidTestSupport}"
    testImplementation 'org.mockito:mockito-inline:2.23.0'
}
